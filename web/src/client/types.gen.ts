// This file is auto-generated by @hey-api/openapi-ts

export type ErrorDetail = {
    /**
     * Where the error occurred, e.g. 'body.items[3].tags' or 'path.thing-id'
     */
    location?: string;
    /**
     * Error message text
     */
    message?: string;
    /**
     * The value at the given location
     */
    value?: unknown;
};

export type ErrorModel = {
    /**
     * A URL to the JSON Schema for this object.
     */
    readonly $schema?: string;
    /**
     * A human-readable explanation specific to this occurrence of the problem.
     */
    detail?: string;
    /**
     * Optional list of individual error details
     */
    errors?: Array<ErrorDetail> | null;
    /**
     * A URI reference that identifies the specific occurrence of the problem.
     */
    instance?: string;
    /**
     * HTTP status code
     */
    status?: number;
    /**
     * A short, human-readable summary of the problem type. This value should not change between occurrences of the error.
     */
    title?: string;
    /**
     * A URI reference to human-readable documentation for the error.
     */
    type?: string;
};

export type JobView = {
    cron: string;
    name: string;
    runs: Array<RunView> | null;
};

export type ListLogsByRunIdsRow = {
    created_at: number;
    created_at_time: unknown;
    message: string;
    run_id: number;
    severity_id: number;
};

export type RunView = {
    duration: string;
    end_time: string;
    id: number;
    job_name: string;
    logs: Array<ListLogsByRunIdsRow> | null;
    start_time: string;
    status_id: number;
};

export type PostCommandData = {
    body?: {
        /**
         * command to execute
         */
        command?: string;
    };
    path?: never;
    query?: never;
    url: '/api/command';
};

export type PostCommandErrors = {
    /**
     * Error
     */
    default: ErrorModel;
};

export type PostCommandError = PostCommandErrors[keyof PostCommandErrors];

export type PostCommandResponses = {
    /**
     * No Content
     */
    204: void;
};

export type PostCommandResponse = PostCommandResponses[keyof PostCommandResponses];

export type GetJobsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/jobs';
};

export type GetJobsErrors = {
    /**
     * Error
     */
    default: ErrorModel;
};

export type GetJobsError = GetJobsErrors[keyof GetJobsErrors];

export type GetJobsResponses = {
    /**
     * OK
     */
    200: Array<JobView> | null;
};

export type GetJobsResponse = GetJobsResponses[keyof GetJobsResponses];

export type PostJobsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/jobs';
};

export type PostJobsErrors = {
    /**
     * Error
     */
    default: ErrorModel;
};

export type PostJobsError = PostJobsErrors[keyof PostJobsErrors];

export type PostJobsResponses = {
    /**
     * No Content
     */
    204: void;
};

export type PostJobsResponse = PostJobsResponses[keyof PostJobsResponses];

export type PostJobData = {
    body?: never;
    path: {
        /**
         * job name
         */
        name: string;
    };
    query?: never;
    url: '/api/jobs/{name}';
};

export type PostJobErrors = {
    /**
     * Error
     */
    default: ErrorModel;
};

export type PostJobError = PostJobErrors[keyof PostJobErrors];

export type PostJobResponses = {
    /**
     * No Content
     */
    204: void;
};

export type PostJobResponse = PostJobResponses[keyof PostJobResponses];

export type GetRunsData = {
    body?: never;
    path: {
        /**
         * job name
         */
        job_name: string;
    };
    query?: {
        /**
         * number of runs to return
         */
        limit?: number;
    };
    url: '/api/runs/{job_name}';
};

export type GetRunsErrors = {
    /**
     * Error
     */
    default: ErrorModel;
};

export type GetRunsError = GetRunsErrors[keyof GetRunsErrors];

export type GetRunsResponses = {
    /**
     * OK
     */
    200: Array<RunView> | null;
};

export type GetRunsResponse = GetRunsResponses[keyof GetRunsResponses];

export type ClientOptions = {
    baseUrl: `${string}://openapi.json` | (string & {});
};