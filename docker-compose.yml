networks:
  net:
    external: false

services:
  traefik:
    image: traefik:2.10
    container_name: traefik
    restart: unless-stopped
    command:
      - '--api=true'
      - '--api.dashboard=true'
      - '--api.insecure=true'
      - '--pilot.dashboard=false'
      - '--global.sendAnonymousUsage=false'
      - '--global.checkNewVersion=false'
      - '--providers.docker=true'
      - '--providers.docker.exposedByDefault=false'
      - '--entryPoints.http=true'
      - '--entryPoints.http.address=:80/tcp'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ=Europe/Berlin
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`proxy.backup.test`)'
      - 'traefik.http.routers.api.service=api@internal'
    ports:
      - '80:80'
    networks:
      net:
        aliases:
          - backup.test

  backend:
    container_name: backend
    build:
      context: .
      dockerfile: ./docker/Dockerfile.dev
      args:
        - DOCKER_VERSION=${DOCKER_VERSION}
        - GOLANG_VERSION=${GOLANG_VERSION}
        - RCLONE_VERSION=${RCLONE_VERSION}
        - RESTIC_VERSION=${RESTIC_VERSION}
    hostname: dev
    command: air -c .air.toml
    volumes:
      - ./:/app/
      - /var/run/docker.sock:/var/run/docker.sock
      - /Users/flohoss/Documents/:/Users/flohoss/Documents/
    environment:
      - TZ=Europe/Berlin
      - LOG_LEVEL=debug
      - SWAGGER_HOST=http://backup.test
      - BACKUP_CRON=0 3 * * *
      - CLEANUP_CRON=0 4 * * *
      - CHECK_CRON=0 2 * * *
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.backend.rule=Host(`backup.test`) && PathPrefix(`/api`)'
    expose:
      - 8080
    networks:
      - net

  frontend:
    container_name: frontend
    image: node:${NODE_VERSION}-alpine
    working_dir: /web
    command: yarn dev --host
    volumes:
      - ./web:/web
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.frontend.rule=Host(`backup.test`)'
    ports:
      - '5173:5173'
    networks:
      - net

  yarn:
    container_name: node_modules
    profiles: [install]
    image: node:${NODE_VERSION}-alpine
    working_dir: /web
    entrypoint: yarn
    volumes:
      - ./web:/web
