# Defaults to UTC timezone
time_zone: 'Etc/UTC'
# Can be one of: "debug, info, warn, error, off", default is info
log_level: 'info'
# Delete runs from db after x days, disable with 0, default is 7
delete_runs_after_days: 7

# You can choose the following software to be included:
# apprise, borgbackup, docker, git, podman, rclone, rdiff-backup,
# restic, rsync, logrotate, sqlite
# Refer to internal/software/software.go for the exact way it is installed
# and how to change the version that will be installed here.
# Recreate the docker for changes to take effect
software:
  - name: 'apprise'
    version: '1.2.0'
  - name: 'borgbackup'
  - name: 'docker'
  - name: 'git'
  - name: 'podman'
  - name: 'rclone'
  - name: 'rdiff-backup'
  - name: 'restic'
  - name: 'rsync'
  - name: 'logrotate'
  - name: 'sqlite3'

# Terminal configuration
terminal:
  # When set to true, any command will be allowed,
  # and the allowed_commands list will be ignored.
  allow_all_commands: false
  # Be careful with this, it will allow a command to be executed.
  # Do not allow any commands that can compromise the system!
  allowed_commands:
    - command: cat
      args:
        - /config/config.yaml
    - command: docker
      args:
        - ps
        - version
    - command: restic
      args:
        - version
    - command: rclone
      args:
        - version

# Server configuration
server:
  # Defaults to 0.0.0.0 to be accessible outside docker
  address: '0.0.0.0'
  # Defaults to 8156
  port: 8156

# Healthcheck configuration
healthcheck:
  # Use authorization header
  authorization: '...'
  # Change HTTP method, defaults to POST
  type: 'POST'
  # Healthcheck phases, start, end, and failure
  # each has a url, query params, and body that is sent
  start:
    url: https://status.example.com
    params:
      success: true
    body: '{"foo": "bar"}'
  end:
    url: https://status.example.com
    params:
      success: true
    body: '{"foo": "bar"}'
  failure:
    url: https://status.example.com
    params:
      success: false
      error: 'Backup failed'
    body: '{"foo": "bar"}'

# Defines default values that are applied to all jobs
# Here you can define commands that will be executed before and after the job
job_defaults:
  cron: '0 3 * * 0'
  envs:
    - key: SLEEP_TIME
      value: '5'
  pre_commands:
    - echo "Starting backup..."
  post_commands:
    - echo "Backup finished!"

# Job configuration
# Multiple jobs can be defined
# They will be executed in sequence
jobs:
  - name: 'Short'
    # Override defaults
    cron: '0 5 * * 0'
    commands:
      - ls -la
      - sleep ${SLEEP_TIME}
      - echo "Done!"
  - name: 'Long'
    # Define environment variables specific to this job
    # You can overwrite environment variables defined in the defaults section
    envs:
      - key: SLEEP_TIME_LONG
        value: '90'
    commands:
      - sleep ${SLEEP_TIME_LONG}
      - echo "Long Done!"
