deploy:
  rules: !reference [.rules:release, rules]
  stage: deploy
  image: debian:${V_DEBIAN}-slim
  id_tokens:
    TBOT_GITLAB_JWT:
      aud: tp.unjx.de
  script:
    - apt-get update && apt-get install curl -y
    - cp tbot.yaml /tmp
    - cd /tmp
    - 'curl -O https://cdn.teleport.dev/teleport-v${V_TELEPORT}-linux-amd64-bin.tar.gz'
    - tar -xvf teleport-v${V_TELEPORT}-linux-amd64-bin.tar.gz
    - ./teleport/install
    - 'tbot start -c tbot.yaml'

    - 'tsh -i /tmp/machine-id/identity --proxy tp.unjx.de:443 ssh gitlab@berg "docker compose -f /opt/docker/backup/compose.yml up gobackup -d --pull always && docker system prune --force"'
    - 'tsh -i /tmp/machine-id/identity --proxy tp.unjx.de:443 ssh gitlab@cafe "docker compose -f /opt/docker/backup/compose.yml up gobackup -d --pull always && docker system prune --force"'
    - 'tsh -i /tmp/machine-id/identity --proxy tp.unjx.de:443 ssh gitlab@media "docker compose -f /opt/docker/backup/compose.yml up gobackup -d --pull always && docker system prune --force"'
    - 'tsh -i /tmp/machine-id/identity --proxy tp.unjx.de:443 ssh gitlab@duff "docker compose -f /opt/docker/backup/compose.yml up gobackup -d --pull always && docker system prune --force"'
    - 'tsh -i /tmp/machine-id/identity --proxy tp.unjx.de:443 ssh gitlab@pawtucket "docker compose -f /opt/docker/backup/compose.yml up gobackup -d --pull always && docker system prune --force"'
  environment:
    name: production
